setwd("/Users/ziyuliu/Documents/GitHub/fastMN")
roxygen2::roxygenise()
?rnorm
roxygen2::roxygenise()
roxygen2::roxygenise()
usethis::use_testthat()
usethis::use_test("fast_rmatnorm")
usethis::use_github_actions()
usethis::use_github_action()
devtools::build_readme()
devtools::build_readme()
devtools::build_readme()
usethis::use_coverage()
usethis::use_github_action()
usethis::use_readme_rmd()
usethis::use_readme_rmd()
devtools::install_github("ziyuliu1999/hw3_lm")
devtools::install_github("ziyuliu1999/fastMN")
?rnorm
usethis::use_rcpp()
usethis::use_rcpp()
usethis::use_rcpp("help_rcpp")
Rcpp::compileAttributes()
document()
devtools::document()
usethis::use_test("fast_dmatnorm")
devtools::test()
usethis::use_rcpp()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
usethis::use_test("fast_pmatnorm")
devtools::test()
usethis::use_coverage()
usethis::use_github_action ("test-coverage")
usethis::use_github_action()
usethis::use_github_action()
usethis::use_github_action()
usethis::use_github_action()
devtools::check()
roxygen2::roxygenise()
devtools::check()
devtools::document()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
document()
devtools::document()
devtools::check()
devtools::check()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::test()
devtools::check()
devtools::document()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
usethis::use_vignette()
usethis::use_vignette("fastMN_vignettes")
devtools::document()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(fastMN)
set.seed(123)
# Define parameters
n <- 5
p <- 3
Z <- matrix(rnorm(n * p), nrow = n, ncol = p) # Random matrix
M <- matrix(0, nrow = n, ncol = p) # Mean matrix
U_cov <- diag(n) # Row covariance (identity)
V_cov <- diag(p) # Column covariance (identity)
Lower <- matrix(-3, nrow = n, ncol = p)  # Lower bound
Upper <- matrix(3, nrow = n, ncol = p)   # Upper bound
samples <- fast_rmatnorm(n, p, M, U_cov, V_cov)
samples <- fast_rmatnorm(n = n, p = p, M = M, U_cov = U_cov, V_cov = V_cov)
smaples
samples <- fast_rmatnorm(n = n, p = p, M = M, U_cov = U_cov, V_cov = V_cov)
samples
pdf <- fast_dmatnorm(Z, M, U_cov, V_cov)
pdf
cdf <- fast_pnormmat(Lower, Upper, M, U_cov, V_cov, method = "pmvnorm")
cdf
set.seed(123)
n <- 10
p <- 5
M <- matrix(rnorm(n * p, mean = 1, sd = 2), nrow = n, ncol = p)
random_matrixU <- matrix(rnorm(n^2, mean = 0.3, sd = 0.5), nrow = n, ncol = n)
random_matrixV <- matrix(rnorm(p^2, mean = -0.1, sd = 0.4), nrow = p, ncol = p)
U_cov = crossprod(random_matrixU)
V_cov = crossprod(random_matrixV)
Lower <- matrix(-10, nrow = n, ncol = p)  # Lower bound
Upper <- matrix(10, nrow = n, ncol = p)   # Upper bound
samples <- fast_rmatnorm(n, p, M, U_cov, V_cov)
set.seed(123)
n <- 10
p <- 5
M <- matrix(rnorm(n * p, mean = 1, sd = 2), nrow = n, ncol = p)
random_matrixU <- matrix(rnorm(n^2, mean = 0.3, sd = 0.5), nrow = n, ncol = n)
random_matrixV <- matrix(rnorm(p^2, mean = -0.1, sd = 0.4), nrow = p, ncol = p)
U_cov = crossprod(random_matrixU)
V_cov = crossprod(random_matrixV)
Lower <- matrix(-10, nrow = n, ncol = p)  # Lower bound
Upper <- matrix(10, nrow = n, ncol = p)   # Upper bound
samples <- fast_rmatnorm(n = n, p = p, M = M, U_cov = U_cov, V_cov = V_cov)
smaples
set.seed(123)
n <- 10
p <- 5
M <- matrix(rnorm(n * p, mean = 1, sd = 2), nrow = n, ncol = p)
random_matrixU <- matrix(rnorm(n^2, mean = 0.3, sd = 0.5), nrow = n, ncol = n)
random_matrixV <- matrix(rnorm(p^2, mean = -0.1, sd = 0.4), nrow = p, ncol = p)
U_cov = crossprod(random_matrixU)
V_cov = crossprod(random_matrixV)
Lower <- matrix(-10, nrow = n, ncol = p)  # Lower bound
Upper <- matrix(10, nrow = n, ncol = p)   # Upper bound
samples <- fast_rmatnorm(n = n, p = p, M = M, U_cov = U_cov, V_cov = V_cov)
samples
pdf <- fast_dmatnorm(Z, M, U_cov, V_cov)
set.seed(123)
n <- 10
p <- 5
M <- matrix(rnorm(n * p, mean = 1, sd = 2), nrow = n, ncol = p)
random_matrixU <- matrix(rnorm(n^2, mean = 0.3, sd = 0.5), nrow = n, ncol = n)
random_matrixV <- matrix(rnorm(p^2, mean = -0.1, sd = 0.4), nrow = p, ncol = p)
U_cov = crossprod(random_matrixU)
V_cov = crossprod(random_matrixV)
Lower <- matrix(-10, nrow = n, ncol = p)  # Lower bound
Upper <- matrix(10, nrow = n, ncol = p)   # Upper bound
samples <- fast_rmatnorm(n = n, p = p, M = M, U_cov = U_cov, V_cov = V_cov)
samples
pdf <- fast_dmatnorm(samples, M, U_cov, V_cov)
pdf
# cdf
fast_pnormmat(
Lower = Lower,
Upper = Upper,
M = M,
U_cov = U_cov,
V_cov = V_cov,
method = "pmvnorm"
)
fast_pnormmat(
Lower = Lower,
Upper = Upper,
M = M,
U_cov = U_cov,
V_cov = V_cov,
method = "sobol"
)
fast_pnormmat(
Lower = Lower,
Upper = Upper,
M = M,
U_cov = U_cov,
V_cov = V_cov,
method = "naive_monte_carlo"
)
microbenchmark::microbenchmark(
fast_pnormmat(
Lower = Lower,
Upper = Upper,
M = M,
U_cov = U_cov,
V_cov = V_cov,
method = "sobol",
N = 10000
),
fast_pnormmat(
Lower = Lower,
Upper = Upper,
M = M,
U_cov = U_cov,
V_cov = V_cov,
method = "pmvnorm"
),
fast_pnormmat(
Lower = Lower,
Upper = Upper,
M = M,
U_cov = U_cov,
V_cov = V_cov,
method = "naive_monte_carlo",
N = 10000
),
times = 10)
devtools::check()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
usethis::use_coverage()
usethis::use_github_action ("test-coverage")
rlang::last_trace()
<!-- badges: start -->
usethis::use_github_action ("test-coverage")
usethis::use_github_action()
usethis::use_github_action()
usethis::use_github_action()
usethis::use_github_action()
usethis::use_github_action()
usethis::use_readme_rmd()
usethis::use_github_action()
usethis::use_github_action()
devtools::document()
devtools::build_readme()
devtools::document()
