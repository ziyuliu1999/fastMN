% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fast_matrix_normal.R
\name{fast_pnormmat}
\alias{fast_pnormmat}
\title{Approximate the CDF of a Matrix Normal Distribution}
\usage{
fast_pnormmat(
  Lower = -Inf,
  Upper = Inf,
  M = NULL,
  U_cov = NULL,
  V_cov = NULL,
  U_prec = NULL,
  V_prec = NULL,
  useCov = TRUE,
  method = "naive_monte_carlo",
  N = NULL,
  tol = 1e-08,
  max_iter = 1000,
  algorithm = mvtnorm::GenzBretz()
)
}
\arguments{
\item{Lower}{A matrix of lower bounds for the integration region. Defaults to \code{-Inf}.}

\item{Upper}{A matrix of upper bounds for the integration region. Defaults to \code{Inf}.}

\item{M}{The mean of the matrix normal distribution.}

\item{U_cov}{The row covariance matrix. Used when \code{useCov = TRUE}.}

\item{V_cov}{The column covariance matrix. Used when \code{useCov = TRUE}.}

\item{U_prec}{A matrix specifying the row precision matrix (inverse of covariance). Used when \code{useCov = FALSE}.}

\item{V_prec}{A matrix specifying the column precision matrix (inverse of covariance). Used when \code{useCov = FALSE}.}

\item{useCov}{A logic indicating whether to use covariance matrices (\code{TRUE}) or precision matrices (\code{FALSE}). Defaults to \code{TRUE}.}

\item{method}{A character string specifying the method to use for the CDF approximation. Defaults to \code{"naive_monte_carlo"}. Options are:
\itemize{
  \item \code{"naive_monte_carlo"}: Uses naive Monte Carlo integration.
  \item \code{"sobol"}: Uses Sobol sequence-based quasi-Monte Carlo integration (requires the `randtoolbox` package).
  \item \code{"pmvnorm"}: Uses the `mvtnorm::pmvnorm` function for direct computation.
}}

\item{N}{An integer specifying the number of samples to draw for Monte Carlo or Sobol methods. Defaults to \code{NULL}, in which case an adaptive sample size is used.}

\item{tol}{A numeric value specifying the tolerance for precision checks in covariance/precision matrices. Defaults to \code{1e-8}.}

\item{max_iter}{An integer specifying the maximum number of iterations for iterative methods. Defaults to \code{1000}.}

\item{algorithm}{A function specifying the integration algorithm to use with mvtnorm::pmvnorm. Defaults to \code{mvtnorm::GenzBretz()}.}
}
\value{
A data frame with the following columns:
\itemize{
  \item \code{method}: The method used for the computation (e.g., \code{"naive monte carlo"}, \code{"sobol monte carlo"}, \code{"mvnorm computation"}).
  \item \code{cdf}: The estimated CDF value.
  \item \code{log_cdf}: The log of the CDF value.
}
}
\description{
This function calculates the cumulative distribution function (CDF) of a matrix normal distribution
It supports three methods: naive Monte Carlo approximation, Sobol sequence-based quasi-Monte Carlo, and direct computation using mvtnorm::pmvnorm.
}
\examples{
# Define the dimensions and M, U, V
n <- 3
p <- 2
# Create the mean matrix
M <- matrix(0, nrow = n, ncol = p)
matrixU <- matrix(c(1, 2, 0, 2, -1, -2, 1, 3, 0), nrow = n, ncol = n)
matrixV <- matrix(c(2, 0, 1, 4), nrow = p, ncol = p)
U_cov <- crossprod(matrixU)  # Row covariance matrix
V_cov <- crossprod(matrixV)  # Column covariance matrix

# Set the lower and upper bounds for the integration
Lower <- matrix(-10, nrow = n, ncol = p)
Upper <- matrix(10, nrow = n, ncol = p)

# Compute the CDF using the naive Monte Carlo method
fast_pnormmat(Lower = Lower, Upper = Upper, M = M,
              U_cov = U_cov, V_cov = V_cov, method = "naive_monte_carlo", N = 1000)

# Compute the CDF using the Sobol method
fast_pnormmat(Lower = Lower, Upper = Upper, M = M,
              U_cov = U_cov, V_cov = V_cov, method = "sobol", N = 1000)

# Compute the CDF using the mvtnorm package
fast_pnormmat(Lower = Lower, Upper = Upper, M = M,
              U_cov = U_cov, V_cov = V_cov, method = "pmvnorm")

}
